{
	"info": {
		"_postman_id": "920ff693-dd17-48ef-ad71-2886aaf6b4f6",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"hanna\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(\"30\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"var req_data = request.data;\r",
							"\r",
							"pm.test(\"name=name request\" , function () {\r",
							"    pm.expect (jsonData.name).to.eql(pm.request.body.formdata.get (\"name\"))\r",
							"})\r",
							"\r",
							"pm.test(\"age=age request\" , function () {\r",
							"    pm.expect (jsonData.age).to.eql(pm.request.body.formdata.get (\"age\"))\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"salary=salary request\" , function () {\r",
							"     pm.request.url.query.get(\"salary\");\r",
							"})\r",
							"\r",
							"\r",
							"var resp_family = jsonData.family;\r",
							"\r",
							" console.log(jsonData.family)\r",
							"\r",
							" pm.test(\"Your Salary_1_5\", function () {\r",
							"   pm.expect(resp_family.u_salary_1_5_year).to.eql(req_data.salary*4);  \r",
							"});\r",
							"\r",
							"\r",
							"pm.expect(jsonData.{children: [2], pets:u_salary_1_5_year: 4000}).to.have.property(pets);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "hanna",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json() ;\r",
							"var req_data = pm.request.toJSON().url.query\r",
							"\r",
							"console.log(req_data[0].value)\r",
							"\r",
							"pm.test(\"name=name request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(req_data[0].value);\r",
							"  })\r",
							"\r",
							"pm.test(\"age=age request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(req_data[1].value);\r",
							"  })\r",
							"\r",
							"pm.test(\"salary=salary request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(+req_data[2].value);\r",
							"  })\r",
							"\r",
							"var resp_family = jsonData.family;\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"salary=salary request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(resp_family.pets.dog).to.have.property(\"name\")\r",
							"})\r",
							"\r",
							"pm.test(\"salary=salary request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(resp_family.pets.dog).to.have.property(\"age\")\r",
							"})\r",
							"\r",
							"pm.test(\"salary=salary request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(resp_family.pets.dog.name).to.eql(\"Luky\");\r",
							"})\r",
							"\r",
							"pm.test(\"salary=salary request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(resp_family.pets.dog.age).to.eql(4);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=hanna&age=30&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "hanna"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var req_data = pm.request.toJSON().url.query\r",
							"\r",
							"console.log(req_data[0].value)\r",
							"\r",
							"pm.test(\"name=name request\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(req_data[0].value);\r",
							"  })  \r",
							"\r",
							"pm.test(\"age=age request\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(+req_data[1].value);\r",
							"  })\r",
							"\r",
							"var req_data = pm.request.toJSON().url.query\r",
							"console.log(req_data[2].value)\r",
							"\r",
							"console.log(jsonData.salary)\r",
							"\r",
							"console.log(jsonData.salary[0]);\r",
							"console.log(jsonData.salary[1]);\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.expect(+req_data[2].value).to.eql(+jsonData.salary[0]);\r",
							"\r",
							"pm.expect(+req_data[2].value*2).to.eql(+jsonData.salary[1]);\r",
							"\r",
							"pm.expect(+req_data[2].value*3).to.eql(+jsonData.salary[2]);\r",
							"\r",
							"pm.environment.set(\"name\",req_data[0].value);\r",
							"pm.environment.set(\"age\",req_data[1].value);\r",
							"pm.environment.set(\"salary\",req_data[2].value);\r",
							"\r",
							"for (let i = 0; i < 3; i++) {\r",
							"  console.log(jsonData.salary[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=hanna&age=30&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "hanna"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"var requestBody = request.data;\r",
							"\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(responseBody).to.have.property(\"start_qa_salary\")\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(responseBody).to.have.property(\"qa_salary_after_6_months\")\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(responseBody).to.have.property(\"qa_salary_after_12_months\")\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(responseBody).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(responseBody).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"})\r",
							"\r",
							"pm.test(\"person\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"pm.expect(responseBody).to.have.property(\"person\")\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary=salary\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(+requestBody.salary).to.eql(responseBody.start_qa_salary);\r",
							"  })  \r",
							"\r",
							"pm.test(\"qa_salary_after_6_months=salary*2\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(requestBody.salary*2).to.eql(responseBody.qa_salary_after_6_months);\r",
							"  })  \r",
							"\r",
							"pm.test(\"qa_salary_after_12_months=salary*2,7\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(requestBody.salary*2.7).to.eql(responseBody.qa_salary_after_12_months);\r",
							"  })  \r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(requestBody.salary*3.3).to.eql(responseBody[\"qa_salary_after_1.5_year\"]);\r",
							"  })  \r",
							"\r",
							"  pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(requestBody.salary*3.8).to.eql(responseBody[\"qa_salary_after_3.5_years\"]);\r",
							"  }) \r",
							"\r",
							"\r",
							" pm.test(\"u_name = salary из request\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(+requestBody.salary).to.eql(+responseBody.person.u_name[1]);\r",
							"  })   \r",
							"\r",
							"pm.test(\"age=age req\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(+requestBody.age).to.eql(+responseBody.person.u_age);\r",
							"  })\r",
							"\r",
							"pm.test(\"u_salary_5_years=salary*4.2\", function () {\r",
							"  //var jsonData = pm.response.json();\r",
							"    pm.expect(requestBody.salary*4.2).to.eql(responseBody.person.u_salary_5_years);\r",
							"  })\r",
							"\r",
							"\r",
							"for (let i = 0; i < 3; i++) {\r",
							"  console.log(Object.entries(responseBody.person)[i][0], Object.entries(responseBody.person)[i][1])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}