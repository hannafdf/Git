Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash
 4. Создать файл “new.json” touch new.json
 5. Добавить файл под гит. git add new.json
git status
 6. Закоммитить файл. git commit -m new.json
 7. Отправить файл на внешний GitHub репозиторий. $ git push
 8. Создать файлы $ touch new2.json, new2.xml, new2.txt
 9. Добавить файлы под гит.   git add . 
 10. Закоммитить файлы. $ git commit -m "new2.json, new2.xml, new2.txt"
 11. Отправить файлы на внешний GitHub репозиторий. $ git push
 12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
vim new2.txt
i ...... esc:wq
 13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 {
        "name":"Hanna" ,
        "lastname":"Karaban" ,
        "age" : 30,
        "number of pets":"1 cat" ,
        "desired Salary":"100500"
}
i ...... esc:wq
 14. Добавить и закоммитить “new2.txt” одной строчкой. $ git add new2.txt && git commit -m "new2.txt"

 15. Добавить и закоммитить “new2.json” одной строчкой. $ git add new2.json && git commit -m "new2.json"

 16. Отправить изменения на внешний репозиторий. $ git push

 17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<?xml version="1.0" encoding="UTF-8" ?>
<about_me>
        <name>Hanna Karaban</name>
        <age>30</age>
        <pets>1</pets>
        <pay>100500</pay>
</about_me>
~

 18. Добавить и закоммитить “new2.xml” одной строчкой. 
$ git add new2.xml && git commit -m "new2.xml"

 19. Отправить изменения на внешний репозиторий.
$ git push
 20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.
+
 21. В веб интерфейсе GitHub создать файл new3.txt.
favorite movie - The mysterious story of Benjamin Button 
Favorite series - Dr. House
favorite food - khachapuri 
favorite season - autumn 
side that we would like to visit - georgia

 22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).

 23. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория) 
$ git pull

 25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
в файле нажать карандашик
{
   "name":"Hanna",
   "lastname":"Karaban",
   "age":30,
   "number of pets":"1 cat",
   "desired Salary":"100500",
   "favorite movie":"The mysterious story of Benjamin Button",
   "favorite series":"Dr. House",
   "favorite food":"khachapuri",
   "favorite season":"autumn",
   "side that we would like to visit":"Georgia"
} 
26. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
+
 27. Синхронизировать внешний и локальный репозитории 
$ git pull
 28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
<?xml version="1.0" encoding="UTF-8" ?>
<about_me>
	<name>Hanna Karaban</name>
	<age>30</age>
	<pets>1<pets>
	<pay>100500</pay>
	<favorite movie>The mysterious story of Benjamin Button</favorite movie>
	<favorite series>Dr. House</favorite series>
	<favorite food>khachapuri</favorite food>
	<favorite season>autumn</favorite season>	
	<side that we would like to visit>Georgia</side that we would like to visit>
<about_me> 
29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 30. Синхронизировать внешний и локальный репозитории 
